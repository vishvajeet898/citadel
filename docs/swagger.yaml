definitions:
  github_com_Orange-Health_citadel_apps_task_metadata_structures.TaskMetadata:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      doctor_name:
        type: string
      doctor_notes:
        type: string
      doctor_number:
        type: string
      id:
        type: integer
      is_critical:
        type: boolean
      is_morphle:
        type: boolean
      is_package:
        type: boolean
      task_id:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  github_com_Orange-Health_citadel_apps_task_structures.TaskMetadata:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      doctor_name:
        description: |-
          The name of the doctor.
          example: "Dr. John Doe"
        type: string
      doctor_notes:
        description: |-
          Notes from the doctor.
          example: "Patient is suffering from fever."
        type: string
      doctor_number:
        description: |-
          The number of the doctor.
          example: "9087654321"
        type: string
      id:
        type: integer
      is_critical:
        description: |-
          Whether the task is critical.
          example: false
        type: boolean
      is_morphle:
        description: |-
          Whether the task is morphle.
          example: false
        type: boolean
      is_package:
        description: |-
          Whether the task is a package.
          example: false
        type: boolean
      partner_name:
        description: |-
          The name of the partner.
          example: "Partner Name"
        type: string
      task_id:
        description: |-
          The ID of the task.
          example: 1
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.TaskMetadata:
    type: object
  structures.Attachment:
    properties:
      attachment_label:
        description: |-
          The attachment label of the attachment.
          example: "Report"
        type: string
      attachment_type:
        description: |-
          The attachment type of the attachment.
          example: "PDF"
        type: string
      attachment_url:
        description: |-
          The attachment URL of the attachment.
          example: "citadel/demo.pdf"
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      extension:
        description: |-
          The extension of the attachment.
          example: "pdf"
        type: string
      id:
        type: integer
      investigation_result_id:
        description: |-
          The investigation result ID of the attachment.
          example: 1
        type: integer
      is_reportable:
        description: |-
          Is the attachment reportable in PDF.
          example: true
        type: boolean
      reference:
        description: |-
          The reference URL of the attachment.
          example: "https://www.google.com"
        type: string
      task_id:
        description: |-
          The task ID of the attachment.
          example: 1
        type: integer
      thumbnail_reference:
        description: |-
          The thumbnail reference of the attachment.
          example: "citadel/resized-media/demo.pdf"
        type: string
      thumbnail_url:
        description: |-
          The thumbnail URL of the attachment.
          example: "https://www.google.com"
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  structures.AuditLog:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      id:
        type: integer
      log:
        allOf:
        - $ref: '#/definitions/structures.Log'
        description: |-
          The log of the AuditLog.
          example: {"log": {"request_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "order_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "sample_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "test_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "investigation_logs": [{"investigation_name": "CBC", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]}]}]}]}]}}
      log_type:
        description: |-
          The log type of the AuditLog.
          example: "Task"
        type: string
      task_id:
        description: |-
          The task ID of the AudiLog.
          example: 1
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  structures.CommonAPIResponse:
    properties:
      data:
        description: The data of the response.
      error:
        description: |-
          The error of the response.
          example: "Error while fetching"
        type: string
      message:
        description: |-
          The message of the response.
          example: "Fetched Successfully"
        type: string
      validation_errors:
        additionalProperties: true
        description: |-
          Validation Errors
          example: {"field": "error message"}
        type: object
    type: object
  structures.CommonError:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  structures.DeltaValuesStructResponse:
    properties:
      approved_at:
        type: string
      investigation_value:
        type: string
      master_investigation_id:
        type: integer
    type: object
  structures.InvestigationData:
    properties:
      data:
        description: |-
          Data contains the investigation data in text format
          swagger:strfmt binary
        type: string
      data_type:
        description: |-
          The investigation data type.
          example: "medical_remark"
        type: string
      id:
        description: |-
          The investigation data ID.
          example: 1
        type: integer
      investigation_result_id:
        description: |-
          InvestigationResultId is the ID of the investigation result.
          example: 1
        type: integer
    type: object
  structures.InvestigationLogs:
    properties:
      investigation_name:
        description: |-
          The investigation name of the InvestigationLogs.
          example: "CBC"
        type: string
      status_logs:
        description: |-
          The status logs of the InvestigationLogs.
          example: [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]
        items:
          $ref: '#/definitions/structures.StatusLog'
        type: array
    type: object
  structures.InvestigationResult:
    properties:
      abnormality:
        description: |-
          The investigation abnormality.
          example: "N"
        type: string
      approved_at:
        description: |-
          The investigation Approved At.
          example: "2021-07-01T12:00:00Z"
        type: string
      approved_by:
        description: |-
          The investigation Approved By.
          example: 1
        type: integer
      auto_approval_failure_reason:
        type: string
      barcodes:
        description: |-
          Barcodes of the investigation.
          example: "1234567890"
        type: string
      department:
        description: |-
          The investigation Department of the investigation result.
          example: "Hematology"
        type: string
      device_value:
        description: |-
          The investigation device value of the investigation result.
          example: "12.5"
        type: string
      entered_at:
        description: |-
          The investigation result Entered At.
          example: "2021-07-01T12:00:00Z"
        type: string
      entered_by:
        description: |-
          The investigation Entered Technician.
          example: 1
        type: integer
      id:
        description: |-
          The investigation result ID.
          example: 1
        type: integer
      investigation_data:
        allOf:
        - $ref: '#/definitions/structures.InvestigationData'
        description: "The investigation Investigation Data.\nexample: {\n\t\t\"id\":
          1,\n\t\t\"data\": \"This is a investigation value in text\",\n\t\t\"data_type\":
          \"investigation_value_text\",\n\t\t\"created_at\": \"2021-07-01T12:00:00Z\",\n\t\t\"updated_at\":
          \"2021-07-01T12:00:00Z\",\n\t\t\"deleted_at\": \"2021-07-01T12:00:00Z\",\n\t\t\"created_by\":
          1,\n\t\t\"updated_by\": 1,\n\t\t\"deleted_by\": 1\n\t}"
      investigation_name:
        description: |-
          The investigation name of the investigation result.
          example: "Hemoglobin"
        type: string
      investigation_value:
        description: |-
          The investigation value of the investigation result.
          example: "12.5"
        type: string
      is_auto_approved:
        description: |-
          If the investigation was auto approved.
          example: true
        type: boolean
      is_critical:
        description: |-
          The investigation Is Critical.
          example: true
        type: boolean
      is_non_reportable:
        description: |-
          The investigation Reportable in PDF.
          example: true
        type: boolean
      lis_code:
        description: |-
          The investigation Lis-Code.
          example: "HGB0001"
        type: string
      master_investigation_id:
        description: |-
          The investigation ID of the investigation result.
          example: 1
        type: integer
      master_test_id:
        description: |-
          The investigation Master Test ID.
          example: 1
        type: integer
      method:
        description: |-
          The investigation method performed.
          example: "Manual"
        type: string
      method_type:
        description: |-
          The investigation method type.
          example: "Manual"
        type: string
      reference_range_text:
        description: |-
          The investigation reference range of the investigation result.
          example: "12.0 - 16.0"
        type: string
      result_representation_type:
        description: |-
          The investigation result representation type of the investigation result.
          example: "biopattern"
        type: string
      source:
        description: |-
          The investigation Source.
          example: "OH Lab BLR"
        type: string
      status:
        description: |-
          The investigation Status.
          example: "Approved"
        type: string
      test_detail_id:
        description: |-
          The test detail ID of the investigation result.
          example: 1
        type: integer
      test_details_status:
        description: |-
          The test detail status of the investigation result.
          example: "approved"
        type: string
      uom:
        description: |-
          The investigation unit of measurement of the investigation result.
          example: "g/dL"
        type: string
    type: object
  structures.LabDetailsStruct:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  structures.Log:
    properties:
      request_logs:
        description: The request details of the Log.
        items:
          $ref: '#/definitions/structures.RequestLog'
        type: array
    type: object
  structures.ModifyValueApiRequest:
    properties:
      current_investigation:
        $ref: '#/definitions/structures.ModifyValueRequest'
      past_investigations:
        items:
          $ref: '#/definitions/structures.ModifyValueRequest'
        type: array
    type: object
  structures.ModifyValueRequest:
    properties:
      investigation_value:
        type: string
      master_investigation_id:
        type: integer
    type: object
  structures.OrderLogs:
    properties:
      id:
        description: |-
          The ID of the OrderLogs.
          example: 1
        type: string
      sample_logs:
        description: |-
          The sample logs of the RequestLog.
          example: [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "test_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "investigation_logs": [{"investigation_name": "CBC", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]}]}]
        items:
          $ref: '#/definitions/structures.SampleLogs'
        type: array
      status_logs:
        description: |-
          The status logs of the OrderLogs.
          example: [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]
        items:
          $ref: '#/definitions/structures.StatusLog'
        type: array
    type: object
  structures.PatientDetail:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      dob:
        description: |-
          The date of birth of the patient.
          example: "1997-01-01"
        type: string
      expected_dob:
        description: |-
          The expected date of birth of the patient.
          example: "1997-01-01"
        type: string
      gender:
        description: |-
          The gender of the patient.
          example: "Male/Female"
        type: string
      id:
        type: integer
      name:
        description: |-
          The name of the patient.
          example: "Jane Doe"
        type: string
      number:
        description: |-
          The number of the patient.
          example: "9087654321"
        type: string
      system_patient_id:
        description: |-
          The system patient ID of the patient.
          example: "12345"
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  structures.PatientPastRecordsApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/structures.PatientPastRecordsData'
        type: array
      dates:
        items:
          type: string
        type: array
      patient_details:
        $ref: '#/definitions/structures.PatientPastRecordsPatientDetails'
    type: object
  structures.PatientPastRecordsData:
    properties:
      department:
        type: string
      investigations:
        items:
          $ref: '#/definitions/structures.PatientPastRecordsInvestigations'
        type: array
    type: object
  structures.PatientPastRecordsInvestigations:
    properties:
      investigation_id:
        type: integer
      investigation_name:
        type: string
      past_records:
        additionalProperties:
          items:
            $ref: '#/definitions/structures.PatientPastRecordsValue'
          type: array
        type: object
    type: object
  structures.PatientPastRecordsPatientDetails:
    properties:
      age_days:
        type: integer
      age_months:
        type: integer
      age_years:
        type: integer
      gender:
        type: string
      name:
        type: string
    type: object
  structures.PatientPastRecordsValue:
    properties:
      investigation_data:
        type: string
      investigation_value:
        type: string
      uom:
        type: string
    type: object
  structures.RequestLog:
    properties:
      id:
        description: |-
          The ID of the RequestLog.
          example: 1
        type: string
      order_logs:
        description: |-
          The order logs of the RequestLog.
          example: [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "sample_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "test_logs": [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "investigation_logs": [{"investigation_name": "CBC", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]}]}]}]
        items:
          $ref: '#/definitions/structures.OrderLogs'
        type: array
      status_logs:
        description: |-
          The status logs of the RequestLog.
          example: [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]
        items:
          $ref: '#/definitions/structures.StatusLog'
        type: array
    type: object
  structures.SampleLogs:
    properties:
      id:
        description: |-
          The ID of the SampleLogs.
          example: 1
        type: string
      status_logs:
        description: |-
          The status logs of the SampleLogs.
          example: [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]
        items:
          $ref: '#/definitions/structures.StatusLog'
        type: array
      test_logs:
        description: |-
          The test logs of the SampleLogs.
          example: [{"id": "1", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}], "investigation_logs": [{"investigation_name": "CBC", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]}]
        items:
          $ref: '#/definitions/structures.TestLogs'
        type: array
    type: object
  structures.StatusLog:
    properties:
      status:
        description: |-
          The status of the StatusLog.
          example: "Pending"
        type: string
      timestamp:
        description: |-
          The timestamp of the StatusLog.
          example: "2021-07-01T12:00:00Z"
        type: string
      user:
        description: |-
          The user of the StatusLog.
          example: "John Doe"
        type: string
      user_id:
        description: |-
          The user ID of the StatusLog.
          example: "1"
        type: string
    type: object
  structures.TaskCallingDetailsResponse:
    properties:
      agent_id:
        type: string
      mobile_number:
        type: string
    type: object
  structures.TaskContentStruct:
    properties:
      contains_morphle:
        type: boolean
      contains_package:
        type: boolean
    type: object
  structures.TaskDetail:
    properties:
      city_code:
        description: |-
          The city code of the task.
          example: "BLR"
        type: string
      completed_at:
        description: |-
          The completion time of the task.
          example: "2022-01-01T00:00:00Z"
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      id:
        type: integer
      is_active:
        description: |-
          Whether the task is active.
          example: true
        type: boolean
      lab_id:
        description: |-
          The lab ID of the task.
          example: 1
        type: integer
      order_id:
        description: |-
          The order ID of the task.
          example: 54321
        type: integer
      order_type:
        description: |-
          The order type of the task.
          example: "D2C"
        type: string
      patient_details:
        allOf:
        - $ref: '#/definitions/structures.PatientDetail'
        description: The details of the patient.
      request_id:
        description: |-
          The request ID of the task.
          example: "REQ12345"
        type: string
      status:
        description: |-
          The status of the task.
          example: "Completed"
        type: string
      task_metadata:
        allOf:
        - $ref: '#/definitions/github_com_Orange-Health_citadel_apps_task_structures.TaskMetadata'
        description: The Task Metadata.
      task_visits:
        description: The Task Visit Details.
        items:
          $ref: '#/definitions/structures.VisitDetailsForTask'
        type: array
      updated_at:
        type: string
      updated_by:
        type: integer
      visit_count:
        description: Visit Count
        type: integer
    type: object
  structures.TaskDetailsStruct:
    properties:
      approved_by:
        items:
          type: integer
        type: array
      city_code:
        type: string
      co_authorized_by:
        type: integer
      doctor_tat:
        type: string
      lab_details:
        $ref: '#/definitions/structures.LabDetailsStruct'
      order_id:
        type: integer
      patient_name:
        type: string
      picked_by:
        type: integer
      status:
        type: string
      task_contents:
        $ref: '#/definitions/structures.TaskContentStruct'
      task_id:
        type: integer
      test_details:
        items:
          $ref: '#/definitions/structures.TestDetailsStruct'
        type: array
    type: object
  structures.TaskListResponse:
    properties:
      co_authorize:
        $ref: '#/definitions/structures.TaskResponseStruct'
      critical:
        $ref: '#/definitions/structures.TaskResponseStruct'
      in_progress:
        $ref: '#/definitions/structures.TaskResponseStruct'
      normal:
        $ref: '#/definitions/structures.TaskResponseStruct'
      withheld:
        $ref: '#/definitions/structures.TaskResponseStruct'
    type: object
  structures.TaskPathologistMapping:
    properties:
      is_active:
        description: |-
          Whether the task pathologist mapping is active.
          example: true
        type: boolean
      pathologist_id:
        description: |-
          The ID of the pathologist.
          example: 1
        type: integer
      task_id:
        description: |-
          The ID of the task.
          example: 1
        type: integer
    type: object
  structures.TaskResponseStruct:
    properties:
      show_more:
        type: boolean
      tasks:
        items:
          $ref: '#/definitions/structures.TaskDetailsStruct'
        type: array
    type: object
  structures.Template:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      description:
        description: |-
          The description of the Templete.
          example: "This is a medical remark"
        type: string
      display_order:
        description: |-
          The display order of the Templete.
          example: 1
        type: integer
      id:
        type: integer
      template_type:
        description: |-
          The type of the Templete.
          example: "medical_remark"
        type: string
      title:
        description: |-
          The title of the Templete.
          example: "This is a medical remark"
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  structures.TestDetail:
    properties:
      city_code:
        description: Need to change this to OMS City Code
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      deleted_by:
        type: integer
      department:
        type: string
      doctor_tat:
        description: |-
          Doctor TAT to complete the test result review.
          example: "2022-10-01T00:00:00"
        type: string
      id:
        type: integer
      is_auto_approved:
        description: |-
          The test result of the test.
          example: "N"
        type: boolean
      is_manual_report_upload:
        description: |-
          The test is manual report upload.
          example: true
        type: boolean
      lab_id:
        type: integer
      lis_code:
        type: string
      master_package_id:
        description: |-
          Master Package Id of the test.
          example: 1234
        type: integer
      master_test_id:
        description: |-
          The master test id of the test.
          example: 1234
        type: integer
      oms_order_id:
        description: |-
          The OMS order id of the test.
          example: 12345
        type: integer
      oms_test_id:
        description: |-
          The OMS test ID of the test.
          example: 54321
        type: integer
      processing_lab_id:
        type: integer
      report_sent_at:
        description: |-
          The test Report Sent At.
          example: "2022-10-01T00:00:00"
        type: string
      report_status:
        type: string
      status:
        description: |-
          The test type of the test.
          example: "Open"
        type: string
      task_id:
        description: |-
          The task ID of the test.
          example: 2345
        type: integer
      test_name:
        description: |-
          The test name of the test.
          example: "CBC"
        type: string
      test_type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  structures.TestDetailsStruct:
    properties:
      name:
        type: string
      status:
        type: string
      status_label:
        type: string
    type: object
  structures.TestLogs:
    properties:
      id:
        description: |-
          The ID of the TestLogs.
          example: 1
        type: string
      investigation_logs:
        description: |-
          The investigation logs of the TestLogs.
          example: [{"investigation_name": "CBC", "status_logs": [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]
        items:
          $ref: '#/definitions/structures.InvestigationLogs'
        type: array
      status_logs:
        description: |-
          The status logs of the TestLogs.
          example: [{"status": "Pending", "timestamp": "2021-07-01T12:00
          :00Z", "user": "John Doe", "user_id": "1"}]
        items:
          $ref: '#/definitions/structures.StatusLog'
        type: array
    type: object
  structures.UpdateAllTaskDetailsStruct:
    properties:
      task:
        $ref: '#/definitions/structures.UpdateTaskStruct'
      user_id:
        type: integer
    type: object
  structures.UpdateInvestigationStruct:
    properties:
      abnormality:
        type: string
      co_authorize_to:
        type: integer
      department:
        type: string
      id:
        type: integer
      investigation_data:
        type: string
      investigation_value:
        type: string
      remarks:
        $ref: '#/definitions/structures.UpdateRemarkStruct'
      rerun_details:
        $ref: '#/definitions/structures.UpdateRerunDetailsStruct'
      status:
        type: string
    type: object
  structures.UpdateRemarkStruct:
    properties:
      medical_remark:
        $ref: '#/definitions/structures.UpdateRemarkStructDetails'
      withheld_reason:
        $ref: '#/definitions/structures.UpdateRemarkStructDetails'
    type: object
  structures.UpdateRemarkStructDetails:
    properties:
      description:
        type: string
      id:
        type: integer
      to_delete:
        type: boolean
    type: object
  structures.UpdateRerunDetailsStruct:
    properties:
      id:
        type: integer
      rerun_reason:
        type: string
    type: object
  structures.UpdateTaskStruct:
    properties:
      id:
        type: integer
      test_details:
        items:
          $ref: '#/definitions/structures.UpdateTestDetailsStruct'
        type: array
    type: object
  structures.UpdateTestDetailsStruct:
    properties:
      id:
        type: integer
      investigations:
        items:
          $ref: '#/definitions/structures.UpdateInvestigationStruct'
        type: array
    type: object
  structures.UserDetail:
    properties:
      email:
        description: |-
          The email of the user.
          example: "shrish.chandra@orangehealth.in"
        type: string
      id:
        description: |-
          The id of the user.
          example: 1
        type: integer
      user_name:
        description: |-
          The user name of the user.
          example: "John Doe"
        type: string
      user_type:
        description: |-
          The user type of the user.
          example: "Pathologoist"
        type: string
    type: object
  structures.VisitDetailsForTask:
    properties:
      sample_collected_at:
        type: string
      sample_received_at:
        type: string
      visit_id:
        type: string
    type: object
info:
  contact: {}
  description: Citadel API Documentation
  title: Citadel API
paths:
  /:
    post:
      consumes:
      - application/json
      description: Create Task Pathologist Mapping
      parameters:
      - description: Task Pathologist Mapping
        in: body
        name: structures.taskPathologistMapping
        required: true
        schema:
          $ref: '#/definitions/structures.TaskPathologistMapping'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/structures.TaskPathologistMapping'
      summary: Create Task Pathologist Mapping
      tags:
      - task-pathologist-mapping
  /api/v1/attachments/tasks/{taskId}:
    get:
      description: Get all attachments by task id
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Attachments
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/structures.Attachment'
              type: array
            type: object
      summary: Get Attachments
      tags:
      - attachments
    post:
      description: Add attachment by Task ID and Investigation ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Attachments
          schema:
            $ref: '#/definitions/structures.Attachment'
      summary: Add Attachment
      tags:
      - attachments
  /api/v1/audit_logs/tasks/{taskId}:
    get:
      description: Get all audit logs by order id
      parameters:
      - description: Task ID
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Audit Logs
          schema:
            items:
              $ref: '#/definitions/structures.AuditLog'
            type: array
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: Get Audit Logs
      tags:
      - audit_logs
  /api/v1/investigation-results/patients/delta-values:
    get:
      description: Get delta values from patient id
      parameters:
      - description: Patient Id
        in: query
        name: patient_id
        required: true
        type: integer
      - description: Master Investigation Ids
        in: query
        name: master_investigation_ids
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delta Values
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/structures.DeltaValuesStructResponse'
              type: array
            type: object
      summary: Get Delta Values from Patient ID
      tags:
      - investigation-results
  /api/v1/investigation-results/patients/past-records:
    get:
      description: Get all investigation results of a patient
      parameters:
      - description: Patient ID
        in: path
        name: patient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Patient Past Records
          schema:
            $ref: '#/definitions/structures.PatientPastRecordsApiResponse'
      summary: Get Patient Past Records
      tags:
      - investigation-results
  /api/v1/investigation-results/tasks/{taskId}/details:
    get:
      description: Get all investigation results by task id
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Investigation Results
          schema:
            items:
              $ref: '#/definitions/structures.InvestigationResult'
            type: array
      summary: Get Investigation Results
      tags:
      - investigation-results
  /api/v1/investigation-results/tasks/{taskId}/investigation-abnormality:
    get:
      description: Get investigation abnormality by task id, investigation code and
        value
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: Investigation Code
        in: query
        name: investigation_code
        required: true
        type: string
      - description: Investigation Value
        in: query
        name: investigation_value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Abnormality
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: Get Investigation Abnormality
      tags:
      - investigation-results
  /api/v1/investigation-results/tasks/{taskId}/modify-value:
    post:
      description: Get derived investigations and abnormality by task id, investigation
        code and value
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: Modify Value API Request
        in: body
        name: ModifyValueApiRequest
        required: true
        schema:
          $ref: '#/definitions/structures.ModifyValueApiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Abnormality
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: Get Derived Investigations and Abnormality
      tags:
      - investigation-results
  /api/v1/report-generation/trigger:
    post:
      description: Trigger Report Generation Event for a given order ID
      parameters:
      - description: Order ID
        in: query
        name: order_id
        required: true
        type: integer
      - description: Test IDs
        in: query
        name: test_ids
        type: array
      - description: City Code
        in: query
        name: city_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            items:
              $ref: '#/definitions/structures.CommonAPIResponse'
            type: array
        "400":
          description: Common API Response
          schema:
            items:
              $ref: '#/definitions/structures.CommonAPIResponse'
            type: array
        "500":
          description: Common API Response
          schema:
            items:
              $ref: '#/definitions/structures.CommonAPIResponse'
            type: array
      summary: Trigger Report Generation Event
      tags:
      - Report Generation
  /api/v1/searchController/tasks:
    get:
      description: Get all tasks based on filters provided
      produces:
      - application/json
      responses:
        "200":
          description: Tasks List
          schema:
            $ref: '#/definitions/structures.TaskListResponse'
        "400":
          description: Error Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "404":
          description: Error Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "500":
          description: Error Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: Get Tasks List
      tags:
      - searchController
  /api/v1/task-metadata/task/{taskId}/details:
    get:
      description: Get Task Metadata Details for the given Task ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/github_com_Orange-Health_citadel_apps_task_metadata_structures.TaskMetadata'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: GetTaskMetadataDetails
      tags:
      - task-metadata
  /api/v1/task-metadata/task/{taskId}/last-event-sent-at:
    patch:
      description: Update Last Event Sent At for the given Task ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            type: string
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: UpdateLastEventSentAt
      tags:
      - task-metadata
  /api/v1/task-metadata/tasks/:taskId:
    patch:
      consumes:
      - application/json
      description: Update Task Metadata Details for the given Task ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: Task Metadata Object
        in: body
        name: taskMetadata
        required: true
        schema:
          $ref: '#/definitions/models.TaskMetadata'
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/models.TaskMetadata'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: UpdateTaskMetadata
      tags:
      - task-metadata
  /api/v1/tasks/{taskId}/calling-details:
    get:
      description: Get Calling Task Details
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: Calling Type
        in: query
        name: calling_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Calling Details Response
          schema:
            $ref: '#/definitions/structures.TaskCallingDetailsResponse'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: GetCallingTaskDetails
      tags:
      - tasks
  /api/v1/tasks/{taskId}/details:
    get:
      description: Get Task Details for the given Task ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.TaskDetail'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: GetTaskById
      tags:
      - tasks
  /api/v1/tasks/{taskId}/undo-release:
    patch:
      description: Undo Release Report for the given Task ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: UndoReleaseReport
      tags:
      - tasks
  /api/v1/tasks/count:
    get:
      description: Get all tasks based on filters provided
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: GetTasksList
      tags:
      - tasks
  /api/v1/tasks/details:
    patch:
      consumes:
      - application/json
      description: Update all task details
      parameters:
      - description: Task Details
        in: body
        name: taskDetails
        required: true
        schema:
          $ref: '#/definitions/structures.UpdateAllTaskDetailsStruct'
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: UpdateAllTaskDetails
      tags:
      - tasks
  /api/v1/templates:
    get:
      consumes:
      - application/json
      description: Get Templates By Type
      parameters:
      - description: Template Type
        in: query
        name: template_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Templates
          schema:
            items:
              $ref: '#/definitions/structures.Template'
            type: array
      summary: Get Templates By Type
      tags:
      - templates
  /api/v1/test-details/{testDetailId}:
    get:
      description: Get Test Detail for the given testDetailId
      parameters:
      - description: Test Detail ID
        in: path
        name: testDetailId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Test Detail
          schema:
            $ref: '#/definitions/structures.TestDetail'
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: GetTestDetailById
      tags:
      - test-details
  /api/v1/test-details/tasks/{taskId}:
    get:
      description: Get Test Details for the given Task ID
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            items:
              $ref: '#/definitions/structures.TestDetail'
            type: array
        "400":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "404":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
        "500":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonError'
      summary: GetTestDetailByTaskId
      tags:
      - test-details
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structures.UserDetail'
      produces:
      - application/json
      responses:
        "200":
          description: User Details
          schema:
            $ref: '#/definitions/structures.UserDetail'
      summary: Create User
      tags:
      - users
  /api/v1/user/{id}:
    post:
      consumes:
      - application/json
      description: Update a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structures.UserDetail'
      produces:
      - application/json
      responses:
        "200":
          description: User Details
          schema:
            $ref: '#/definitions/structures.UserDetail'
      summary: Update User
      tags:
      - users
  /api/v1/users:
    get:
      description: Get all users
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User Details
          schema:
            items:
              $ref: '#/definitions/structures.UserDetail'
            type: array
      summary: Get Users
      tags:
      - users
  /api/v1/users/{id}:
    get:
      description: Get a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User Detail
          schema:
            $ref: '#/definitions/structures.UserDetail'
      summary: Get User
      tags:
      - users
  /api/v1/users/get-user-by-email:
    get:
      description: Get a user by email
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Details
          schema:
            $ref: '#/definitions/structures.UserDetail'
      summary: Get User By Email
      tags:
      - users
  /example:
    get:
      consumes:
      - application/json
      parameters:
      - default: application/json
        description: Content-Type
        in: header
        name: Content-Type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: Example Endpoint
  /ping:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Common API Response
          schema:
            $ref: '#/definitions/structures.CommonAPIResponse'
      summary: Health Check
swagger: "2.0"
